<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20180715 10:18:24.455" generator="Robot 3.0.4 (Python 2.7.13 on darwin)">
<suite source="/Users/abhaybhargav/Documents/Code/Python/defcon26/pentest_pipeline/PentestPipeline.robot" id="s1" name="PentestPipeline">
<test id="s1-t1" name="Create Targets">
<kw name="Find Or Create Target" library="ThreatPlaybook">
<doc>Creates a target for security testing</doc>
<arguments>
<arg>${TARGET_NAME}</arg>
<arg>${TARGET_URI}</arg>
</arguments>
<status status="PASS" endtime="20180715 10:18:25.144" starttime="20180715 10:18:25.140"></status>
</kw>
<status status="PASS" endtime="20180715 10:18:25.145" critical="yes" starttime="20180715 10:18:25.139"></status>
</test>
<test id="s1-t2" name="Apply Shodan Results to IP Address">
<kw name="Run Shodan Scan" library="RoboShodan">
<arguments>
<arg>${RESULTS_PATH}</arg>
<arg>${TARGET_IP}</arg>
</arguments>
<msg timestamp="20180715 10:18:27.712" level="INFO">Successfully ran Shodan against the target. Please find the *.json file in the results directory</msg>
<status status="PASS" endtime="20180715 10:18:27.712" starttime="20180715 10:18:25.147"></status>
</kw>
<kw name="Create And Link Recon" library="ThreatPlaybook">
<doc>Links recon with the following params</doc>
<arguments>
<arg>shodan</arg>
<arg>${TARGET_NAME}</arg>
<arg>file_name=${RESULTS_PATH}/shodan.json</arg>
</arguments>
<status status="PASS" endtime="20180715 10:18:27.717" starttime="20180715 10:18:27.712"></status>
</kw>
<status status="PASS" endtime="20180715 10:18:27.718" critical="yes" starttime="20180715 10:18:25.146"></status>
</test>
<test id="s1-t3" name="Port Scan and Service Enumeration">
<kw name="Nmap Script Scan" library="RoboNmap">
<doc>Runs nmap with the -sC arg or the --script arg if script_name is provided. Options used are: -sV --version-intensity &lt;default:0&gt; -sC|--script=&lt;script_name&gt;</doc>
<arguments>
<arg>${TARGET_HOST}</arg>
<arg>file_export=${RESULTS_PATH}/nmap.txt</arg>
</arguments>
<msg timestamp="20180715 10:19:27.940" level="INFO">NmapReport: started at 1531630107 hosts up 1/1</msg>
<status status="PASS" endtime="20180715 10:19:27.940" starttime="20180715 10:18:27.719"></status>
</kw>
<kw name="Nmap Print Results" library="RoboNmap">
<doc>Retrieves the results of the most recent results</doc>
<msg timestamp="20180715 10:19:27.942" level="INFO">NmapHost: [65.61.137.117 (altoromutual.com) - up]</msg>
<msg timestamp="20180715 10:19:27.942" level="INFO">  PORT     STATE         SERVICE</msg>
<msg timestamp="20180715 10:19:27.942" level="INFO">   80/tcp  open          http (product: Microsoft IIS httpd version: 8.0 ostype: Windows)</msg>
<msg timestamp="20180715 10:19:27.942" level="INFO">	 Output: 
  /: 
    amSessionId: 
      httponly flag not set, Elements: {'/': {'amSessionId': '\n'}}, ID: http-cookie-flags</msg>
<msg timestamp="20180715 10:19:27.942" level="INFO">	 Output: 
  Supported Methods: OPTIONS TRACE GET HEAD POST
  Potentially risky methods: TRACE, Elements: {'Supported Methods': {None: ['OPTIONS', 'TRACE', 'GET', 'HEAD', 'POST']}, 'Potentially risky methods': {None: 'TRACE'}}, ID: http-methods</msg>
<msg timestamp="20180715 10:19:27.942" level="INFO">	 Output: Altoro Mutual, Elements: {'title': '\\x0D\n\tAltoro Mutual\\x0D\n'}, ID: http-title</msg>
<msg timestamp="20180715 10:19:27.942" level="INFO">  443/tcp  open          http (product: Microsoft IIS httpd version: 8.0 ostype: Windows)</msg>
<msg timestamp="20180715 10:19:27.942" level="INFO">	 Output: 
  /: 
    amSessionId: 
      httponly flag not set, Elements: {'/': {'amSessionId': '\n'}}, ID: http-cookie-flags</msg>
<msg timestamp="20180715 10:19:27.942" level="INFO">	 Output: 
  Supported Methods: OPTIONS TRACE GET HEAD POST
  Potentially risky methods: TRACE, Elements: {'Supported Methods': {None: ['OPTIONS', 'TRACE', 'GET', 'HEAD', 'POST']}, 'Potentially risky methods': {None: 'TRACE'}}, ID: http-methods</msg>
<msg timestamp="20180715 10:19:27.942" level="INFO">	 Output: Subject: commonName=demo.testfire.net
Issuer: commonName=demo.testfire.net
Public Key type: rsa
Public Key bits: 2048
Signature Algorithm: sha1WithRSA
Not valid before: 2014-07-01T09:54:37
Not valid after:  2019-12-22T09:54:37
MD5:   82a4 b3e9 d7a9 da8b c9f0 afc4 3b8c 144b
SHA-1: 20b9 5a83 17a9 fe16 27d5 b7f6 ac1c ee27 ec73 f040
-----BEGIN CERTIFICATE-----
MIIC4TCCAc2gAwIBAgIQSJrwKxec1KRCk3J5IwgL5TAJBgUrDgMCHQUAMBwxGjAY
BgNVBAMTEWRlbW8udGVzdGZpcmUubmV0MB4XDTE0MDcwMTA5NTQzN1oXDTE5MTIy
MjA5NTQzN1owHDEaMBgGA1UEAxMRZGVtby50ZXN0ZmlyZS5uZXQwggEiMA0GCSqG
SIb3DQEBAQUAA4IBDwAwggEKAoIBAQDPQxNT/l1h8/NUfvtS4eiftBOxF6aom25y
I+qxgsHH7lYTgfJP2qc3jzrTz64P+AP+JMqTAyQ+6grI67i/pSSVgHpe/jYbbRrm
OjK6uJcPIR3QGRQ29L1f5KxqxfI/UQJ6o5bCgpJ+WdO1vD5E1PJ/KbP7XWUqJ6b+
0zyUfRQZpHLBtzG1FFS8F3pXYvbA4/TrifaI0xGvhAsy1WI7MACgAl8MLqazoDXz
XXDxpm7Cs76llU4PWztQrWOxUuKdznMkO3hHTB7WtDfNG/5F/JOgbyn5qDgDgcQ4
MJDC0qtSPKGiXFusMJsdmncOtxBTbN03WlnKPKXs1ZsTy0+NnRvVAgMBAAGjJzAl
MBMGA1UdJQQMMAoGCCsGAQUFBwMBMA4GA1UdDwQHAwUAsAAAADAJBgUrDgMCHQUA
A4IBAQC5Xt1oFwNBZS/ePorvRmbwqYjcZBZ5gw4GkWNSXxVpB7VI5gWs1mB4Bw+6
6LgffVaIaRneXGoxNMT899Pbz5yXgTZIReu7dZme+MzNYidmLFZUdIcZ5BGZ7R5G
TVTMS99ePK+PTkvjn9ylQAZC7NjbDKYDQxadSsLXGdqFsv9Qf4q1EIomwYgXvEm4
tWK2s5il0Hq43XBZLHjU5Bp67dZGrmOUbgENJo6/Pu8pEv6wFtc+JIqSeSNAqt9Q
90H+1w9G4bUjm+vHDsNyl3ae9qjlvK+YgxaHgST0r+fbsmUAbxYo3ILW/0CuQgMl
e+R8VUxoSglCg8FN7eXIfv3KyE8Q
-----END CERTIFICATE-----
, Elements: {'sha1': '20b95a8317a9fe1627d5b7f6ac1cee27ec73f040', 'sig_algo': 'sha1WithRSA', 'validity': {'notAfter': '2019-12-22T09:54:37', 'notBefore': '2014-07-01T09:54:37'}, 'pem': '-----BEGIN CERTIFICATE-----\nMIIC4TCCAc2gAwIBAgIQSJrwKxec1KRCk3J5IwgL5TAJBgUrDgMCHQUAMBwxGjAY\nBgNVBAMTEWRlbW8udGVzdGZpcmUubmV0MB4XDTE0MDcwMTA5NTQzN1oXDTE5MTIy\nMjA5NTQzN1owHDEaMBgGA1UEAxMRZGVtby50ZXN0ZmlyZS5uZXQwggEiMA0GCSqG\nSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDPQxNT/l1h8/NUfvtS4eiftBOxF6aom25y\nI+qxgsHH7lYTgfJP2qc3jzrTz64P+AP+JMqTAyQ+6grI67i/pSSVgHpe/jYbbRrm\nOjK6uJcPIR3QGRQ29L1f5KxqxfI/UQJ6o5bCgpJ+WdO1vD5E1PJ/KbP7XWUqJ6b+\n0zyUfRQZpHLBtzG1FFS8F3pXYvbA4/TrifaI0xGvhAsy1WI7MACgAl8MLqazoDXz\nXXDxpm7Cs76llU4PWztQrWOxUuKdznMkO3hHTB7WtDfNG/5F/JOgbyn5qDgDgcQ4\nMJDC0qtSPKGiXFusMJsdmncOtxBTbN03WlnKPKXs1ZsTy0+NnRvVAgMBAAGjJzAl\nMBMGA1UdJQQMMAoGCCsGAQUFBwMBMA4GA1UdDwQHAwUAsAAAADAJBgUrDgMCHQUA\nA4IBAQC5Xt1oFwNBZS/ePorvRmbwqYjcZBZ5gw4GkWNSXxVpB7VI5gWs1mB4Bw+6\n6LgffVaIaRneXGoxNMT899Pbz5yXgTZIReu7dZme+MzNYidmLFZUdIcZ5BGZ7R5G\nTVTMS99ePK+PTkvjn9ylQAZC7NjbDKYDQxadSsLXGdqFsv9Qf4q1EIomwYgXvEm4\ntWK2s5il0Hq43XBZLHjU5Bp67dZGrmOUbgENJo6/Pu8pEv6wFtc+JIqSeSNAqt9Q\n90H+1w9G4bUjm+vHDsNyl3ae9qjlvK+YgxaHgST0r+fbsmUAbxYo3ILW/0CuQgMl\ne+R8VUxoSglCg8FN7eXIfv3KyE8Q\n-----END CERTIFICATE-----\n', 'extensions': {None: ['\n', '\n']}, 'subject': {'commonName': 'demo.testfire.net'}, 'pubkey': {'type': 'rsa', 'modulus': 'userdata: 0x7fbe3abc7ea8', 'bits': '2048', 'exponent': 'userdata: 0x7fbe3abc2c18'}, 'md5': '82a4b3e9d7a9da8bc9f0afc43b8c144b', 'issuer': {'commonName': 'demo.testfire.net'}}, ID: ssl-cert</msg>
<msg timestamp="20180715 10:19:27.943" level="INFO">	 Output: 2018-07-15T05:48:07+00:00; +58m53s from scanner time., Elements: {'date': '2018-07-15T05:48:07+00:00', 'delta': '3533.0'}, ID: ssl-date</msg>
<msg timestamp="20180715 10:19:27.943" level="INFO"> 8080/tcp  open          http (product: Apache Tomcat/Coyote JSP engine version: 1.1)</msg>
<msg timestamp="20180715 10:19:27.943" level="INFO">	 Output: 
  Supported Methods: GET HEAD POST OPTIONS, Elements: {'Supported Methods': {None: ['GET', 'HEAD', 'POST', 'OPTIONS']}}, ID: http-methods</msg>
<msg timestamp="20180715 10:19:27.943" level="INFO">	 Output: Proxy might be redirecting requests, Elements: {}, ID: http-open-proxy</msg>
<msg timestamp="20180715 10:19:27.943" level="INFO">	 Output: Altoro Mutual, Elements: {'title': 'Altoro Mutual'}, ID: http-title</msg>
<status status="PASS" endtime="20180715 10:19:27.943" starttime="20180715 10:19:27.941"></status>
</kw>
<kw name="Create And Link Recon" library="ThreatPlaybook">
<doc>Links recon with the following params</doc>
<arguments>
<arg>nmap</arg>
<arg>${TARGET_NAME}</arg>
<arg>file_name=${RESULTS_PATH}/nmap.txt</arg>
</arguments>
<status status="PASS" endtime="20180715 10:19:27.949" starttime="20180715 10:19:27.943"></status>
</kw>
<status status="PASS" endtime="20180715 10:19:27.949" critical="yes" starttime="20180715 10:18:27.718"></status>
</test>
<test id="s1-t4" name="Directory Bruteforce">
<kw name="Brute Directories" library="RoboWFuzz">
<arguments>
<arg>http://${TARGET_URI}/FUZZ</arg>
<arg>concur=3</arg>
<arg>file_name=${RESULTS_PATH}/${WFUZZ_FILE}</arg>
</arguments>
<msg timestamp="20180715 10:19:30.750" level="INFO">00034:  C=200      2 L	      33 W	    515 Ch	  "pr"</msg>
<msg timestamp="20180715 10:19:58.306" level="FAIL">Test timeout 30 seconds exceeded.</msg>
<status status="FAIL" endtime="20180715 10:19:58.306" starttime="20180715 10:19:27.951"></status>
</kw>
<timeout value="30 seconds"></timeout>
<status status="FAIL" endtime="20180715 10:19:58.306" critical="yes" starttime="20180715 10:19:27.950">Test timeout 30 seconds exceeded.</status>
</test>
<test id="s1-t5" name="Link Dir Brute Result">
<kw name="Create And Link Recon" library="ThreatPlaybook">
<doc>Links recon with the following params</doc>
<arguments>
<arg>wfuzz</arg>
<arg>${TARGET_NAME}</arg>
<arg>file_name=${RESULTS_PATH}/${WFUZZ_FILE}</arg>
</arguments>
<status status="PASS" endtime="20180715 10:19:58.315" starttime="20180715 10:19:58.309"></status>
</kw>
<status status="PASS" endtime="20180715 10:19:58.315" critical="yes" starttime="20180715 10:19:58.308"></status>
</test>
<test id="s1-t6" name="Test for SSL">
<kw name="Test Ssl Basic" library="RoboSslyze">
<doc>Uses the `ServerConnectivityTester` functionality of SSlyze to perform a basic test.</doc>
<arguments>
<arg>${SSL_TARGET}</arg>
</arguments>
<msg timestamp="20180715 10:20:00.864" level="INFO">SSLv2 ciphersuites not accepted</msg>
<msg timestamp="20180715 10:20:07.967" level="WARN">SSLv3 Cipher Suites accepted</msg>
<msg timestamp="20180715 10:20:07.968" level="INFO">	TLS_RSA_WITH_RC4_128_SHA</msg>
<msg timestamp="20180715 10:20:07.968" level="INFO">	TLS_RSA_WITH_RC4_128_MD5</msg>
<msg timestamp="20180715 10:20:07.968" level="INFO">	TLS_RSA_WITH_3DES_EDE_CBC_SHA</msg>
<msg timestamp="20180715 10:20:08.789" level="WARN">TLSv1 Cipher Suites accepted</msg>
<msg timestamp="20180715 10:20:08.790" level="INFO">	TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA</msg>
<msg timestamp="20180715 10:20:08.790" level="INFO">	TLS_RSA_WITH_AES_256_CBC_SHA</msg>
<msg timestamp="20180715 10:20:08.790" level="INFO">	TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA</msg>
<msg timestamp="20180715 10:20:08.790" level="INFO">	TLS_RSA_WITH_AES_128_CBC_SHA</msg>
<msg timestamp="20180715 10:20:08.790" level="INFO">	TLS_RSA_WITH_RC4_128_SHA</msg>
<msg timestamp="20180715 10:20:08.790" level="INFO">	TLS_RSA_WITH_RC4_128_MD5</msg>
<msg timestamp="20180715 10:20:08.790" level="INFO">	TLS_RSA_WITH_3DES_EDE_CBC_SHA</msg>
<msg timestamp="20180715 10:20:09.402" level="WARN">TLSv1 Cipher Suites accepted</msg>
<msg timestamp="20180715 10:20:09.403" level="INFO">	TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA</msg>
<msg timestamp="20180715 10:20:09.403" level="INFO">	TLS_RSA_WITH_AES_256_CBC_SHA</msg>
<msg timestamp="20180715 10:20:09.403" level="INFO">	TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA</msg>
<msg timestamp="20180715 10:20:09.403" level="INFO">	TLS_RSA_WITH_AES_128_CBC_SHA</msg>
<msg timestamp="20180715 10:20:09.404" level="INFO">	TLS_RSA_WITH_RC4_128_SHA</msg>
<msg timestamp="20180715 10:20:09.404" level="INFO">	TLS_RSA_WITH_RC4_128_MD5</msg>
<msg timestamp="20180715 10:20:09.404" level="INFO">	TLS_RSA_WITH_3DES_EDE_CBC_SHA</msg>
<msg timestamp="20180715 10:20:10.015" level="INFO">Server TLS Implementation not vulnerable to Heartbleed</msg>
<msg timestamp="20180715 10:20:15.880" level="INFO">TLSv1.1 Cipher Suites accepted</msg>
<msg timestamp="20180715 10:20:15.880" level="INFO">	TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA</msg>
<msg timestamp="20180715 10:20:15.880" level="INFO">	TLS_RSA_WITH_AES_256_CBC_SHA</msg>
<msg timestamp="20180715 10:20:15.880" level="INFO">	TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA</msg>
<msg timestamp="20180715 10:20:15.881" level="INFO">	TLS_RSA_WITH_AES_128_CBC_SHA</msg>
<msg timestamp="20180715 10:20:15.881" level="INFO">	TLS_RSA_WITH_RC4_128_MD5</msg>
<msg timestamp="20180715 10:20:15.881" level="INFO">	TLS_RSA_WITH_RC4_128_SHA</msg>
<msg timestamp="20180715 10:20:15.881" level="INFO">	TLS_RSA_WITH_3DES_EDE_CBC_SHA</msg>
<msg timestamp="20180715 10:20:18.074" level="INFO">Test for ROBOT Vulnerability</msg>
<msg timestamp="20180715 10:20:18.075" level="INFO">	Not Vulnerable: The server supports RSA cipher suites but does not act as an oracle</msg>
<msg timestamp="20180715 10:20:20.729" level="INFO">TLSv1.2 Cipher Suites accepted</msg>
<msg timestamp="20180715 10:20:20.730" level="INFO">	TLS_RSA_WITH_AES_256_CBC_SHA256</msg>
<msg timestamp="20180715 10:20:20.730" level="INFO">	TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA</msg>
<msg timestamp="20180715 10:20:20.730" level="INFO">	TLS_RSA_WITH_AES_256_CBC_SHA</msg>
<msg timestamp="20180715 10:20:20.730" level="INFO">	TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA</msg>
<msg timestamp="20180715 10:20:20.730" level="INFO">	TLS_RSA_WITH_RC4_128_MD5</msg>
<msg timestamp="20180715 10:20:20.731" level="INFO">	TLS_RSA_WITH_AES_128_CBC_SHA</msg>
<msg timestamp="20180715 10:20:20.731" level="INFO">	TLS_RSA_WITH_AES_128_CBC_SHA256</msg>
<msg timestamp="20180715 10:20:20.731" level="INFO">	TLS_RSA_WITH_RC4_128_SHA</msg>
<msg timestamp="20180715 10:20:20.731" level="INFO">	TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256</msg>
<msg timestamp="20180715 10:20:20.731" level="INFO">	TLS_RSA_WITH_3DES_EDE_CBC_SHA</msg>
<status status="PASS" endtime="20180715 10:20:20.740" starttime="20180715 10:19:58.317"></status>
</kw>
<kw name="Test Ssl Server Headers" library="RoboSslyze">
<doc>Uses the ServerConnectivityTester to identify host headers specific to TLS/SSL implementations to identify</doc>
<arguments>
<arg>${SSL_TARGET}</arg>
</arguments>
<msg timestamp="20180715 10:20:24.659" level="INFO">Test for HSTS Header</msg>
<msg timestamp="20180715 10:20:24.659" level="WARN">	No HSTS Header found</msg>
<msg timestamp="20180715 10:20:24.659" level="INFO">Test for Expect-CT Header</msg>
<msg timestamp="20180715 10:20:24.659" level="WARN">	No Expect-CT Header found.</msg>
<status status="PASS" endtime="20180715 10:20:24.660" starttime="20180715 10:20:20.745"></status>
</kw>
<kw name="Write Results To Json File" library="RoboSslyze">
<doc>Writes a JSON report with the findings of the SSLyze run.</doc>
<arguments>
<arg>json_file=${SSLYZE_JSON}</arg>
</arguments>
<status status="PASS" endtime="20180715 10:20:24.661" starttime="20180715 10:20:24.660"></status>
</kw>
<kw name="Create And Link Recon" library="ThreatPlaybook">
<doc>Links recon with the following params</doc>
<arguments>
<arg>sslyze</arg>
<arg>${TARGET_NAME}</arg>
<arg>file_name=${RESULTS_PATH}/sslyze.json</arg>
</arguments>
<status status="PASS" endtime="20180715 10:20:24.667" starttime="20180715 10:20:24.661"></status>
</kw>
<status status="PASS" endtime="20180715 10:20:24.667" critical="yes" starttime="20180715 10:19:58.316"></status>
</test>
<test id="s1-t7" name="Initialize ZAP">
<kw name="Start Gui Zap" library="RoboZap">
<doc>Start OWASP ZAP with a GUI</doc>
<arguments>
<arg>${ZAP_PATH}</arg>
</arguments>
<msg timestamp="20180715 10:20:34.677" level="INFO">/Applications/OWASP_ZAP.app/Contents/Java/zap.sh -config api.disablekey=true -port 8090</msg>
<status status="PASS" endtime="20180715 10:20:34.678" starttime="20180715 10:20:24.671"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20180715 10:20:44.681" level="INFO">Slept 10 seconds</msg>
<status status="PASS" endtime="20180715 10:20:44.682" starttime="20180715 10:20:34.679"></status>
</kw>
<kw name="Zap Open Url" library="RoboZap">
<doc>Invoke URLOpen with ZAP</doc>
<arguments>
<arg>http://${TARGET_URI}</arg>
</arguments>
<status status="PASS" endtime="20180715 10:20:50.100" starttime="20180715 10:20:44.682"></status>
</kw>
<tags>
<tag>walk</tag>
</tags>
<status status="PASS" endtime="20180715 10:20:50.101" critical="yes" starttime="20180715 10:20:24.670"></status>
</test>
<test id="s1-t8" name="Open Browser and Initialize Walkthrough">
<kw name="Set Environment Variable" library="OperatingSystem">
<doc>Sets an environment variable to a specified value.</doc>
<arguments>
<arg>webdriver.chrome.driver</arg>
<arg>/Users/abhaybhargav/Documents/Code/Python/ZapRobotSelenium/chromedriver</arg>
</arguments>
<msg timestamp="20180715 10:20:50.105" level="INFO">Environment variable 'webdriver.chrome.driver' set to value '/Users/abhaybhargav/Documents/Code/Python/ZapRobotSelenium/chromedriver'.</msg>
<status status="PASS" endtime="20180715 10:20:50.105" starttime="20180715 10:20:50.104"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>--proxy-server=http://127.0.0.1:8090</arg>
</arguments>
<assign>
<var>${list}</var>
</assign>
<msg timestamp="20180715 10:20:50.106" level="INFO">${list} = [u'--proxy-server=http://127.0.0.1:8090']</msg>
<status status="PASS" endtime="20180715 10:20:50.106" starttime="20180715 10:20:50.105"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>args=${list}</arg>
</arguments>
<assign>
<var>${args}</var>
</assign>
<msg timestamp="20180715 10:20:50.108" level="INFO">${args} = {u'args': [u'--proxy-server=http://127.0.0.1:8090']}</msg>
<status status="PASS" endtime="20180715 10:20:50.108" starttime="20180715 10:20:50.106"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>chromeOptions=${args}</arg>
</arguments>
<assign>
<var>${desired_caps}</var>
</assign>
<msg timestamp="20180715 10:20:50.109" level="INFO">${desired_caps} = {u'chromeOptions': {u'args': [u'--proxy-server=http://127.0.0.1:8090']}}</msg>
<status status="PASS" endtime="20180715 10:20:50.109" starttime="20180715 10:20:50.108"></status>
</kw>
<kw name="Create Webdriver" library="SeleniumLibrary">
<doc>Creates an instance of Selenium WebDriver.</doc>
<arguments>
<arg>Chrome</arg>
<arg>desired_capabilities=${desired_caps}</arg>
</arguments>
<msg timestamp="20180715 10:20:50.110" level="INFO">Creating an instance of the Chrome WebDriver.</msg>
<status status="PASS" endtime="20180715 10:20:51.688" starttime="20180715 10:20:50.110"></status>
</kw>
<kw name="Go To" library="SeleniumLibrary">
<doc>Navigates the active browser instance to the provided ``url``.</doc>
<arguments>
<arg>http://${TARGET_URI}</arg>
</arguments>
<msg timestamp="20180715 10:20:51.690" level="INFO">Opening url 'http://altoromutual.com'</msg>
<status status="PASS" endtime="20180715 10:20:53.647" starttime="20180715 10:20:51.689"></status>
</kw>
<tags>
<tag>walk</tag>
</tags>
<status status="PASS" endtime="20180715 10:20:53.647" critical="yes" starttime="20180715 10:20:50.102"></status>
</test>
<test id="s1-t9" name="Walkthrough Altoro Mutual App">
<kw name="Click Link" library="SeleniumLibrary">
<doc>Clicks a link identified by ``locator``.</doc>
<arguments>
<arg>//a[@id="_ctl0__ctl0_Content_AccountLink"]</arg>
</arguments>
<msg timestamp="20180715 10:20:53.651" level="INFO">Clicking link '//a[@id="_ctl0__ctl0_Content_AccountLink"]'.</msg>
<status status="PASS" endtime="20180715 10:20:54.028" starttime="20180715 10:20:53.650"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>//input[@name="uid"]</arg>
<arg>admin</arg>
</arguments>
<msg timestamp="20180715 10:20:54.029" level="INFO">Typing text 'admin' into text field '//input[@name="uid"]'.</msg>
<status status="PASS" endtime="20180715 10:20:54.134" starttime="20180715 10:20:54.029"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>//input[@name="passw"]</arg>
<arg>admin</arg>
</arguments>
<msg timestamp="20180715 10:20:54.135" level="INFO">Typing text 'admin' into text field '//input[@name="passw"]'.</msg>
<status status="PASS" endtime="20180715 10:20:54.207" starttime="20180715 10:20:54.135"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>//input[@name="btnSubmit"]</arg>
</arguments>
<msg timestamp="20180715 10:20:54.207" level="INFO">Clicking element '//input[@name="btnSubmit"]'.</msg>
<status status="PASS" endtime="20180715 10:20:55.219" starttime="20180715 10:20:54.207"></status>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<doc>Clicks a link identified by ``locator``.</doc>
<arguments>
<arg>//a[@id="_ctl0__ctl0_Content_MenuHyperLink1"]</arg>
</arguments>
<msg timestamp="20180715 10:20:55.220" level="INFO">Clicking link '//a[@id="_ctl0__ctl0_Content_MenuHyperLink1"]'.</msg>
<status status="PASS" endtime="20180715 10:20:55.622" starttime="20180715 10:20:55.220"></status>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<doc>Clicks a link identified by ``locator``.</doc>
<arguments>
<arg>//a[@id="_ctl0__ctl0_Content_MenuHyperLink2"]</arg>
</arguments>
<msg timestamp="20180715 10:20:55.623" level="INFO">Clicking link '//a[@id="_ctl0__ctl0_Content_MenuHyperLink2"]'.</msg>
<status status="PASS" endtime="20180715 10:20:56.125" starttime="20180715 10:20:55.622"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>//input[@name="after"]</arg>
<arg>01/01/2001</arg>
</arguments>
<msg timestamp="20180715 10:20:56.126" level="INFO">Typing text '01/01/2001' into text field '//input[@name="after"]'.</msg>
<status status="PASS" endtime="20180715 10:20:56.223" starttime="20180715 10:20:56.125"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>//input[@name="before"]</arg>
<arg>01/01/2008</arg>
</arguments>
<msg timestamp="20180715 10:20:56.224" level="INFO">Typing text '01/01/2008' into text field '//input[@name="before"]'.</msg>
<status status="PASS" endtime="20180715 10:20:56.321" starttime="20180715 10:20:56.223"></status>
</kw>
<kw name="Click Link" library="SeleniumLibrary">
<doc>Clicks a link identified by ``locator``.</doc>
<arguments>
<arg>//a[@id="_ctl0__ctl0_Content_MenuHyperLink1"]</arg>
</arguments>
<msg timestamp="20180715 10:20:56.322" level="INFO">Clicking link '//a[@id="_ctl0__ctl0_Content_MenuHyperLink1"]'.</msg>
<status status="PASS" endtime="20180715 10:20:56.839" starttime="20180715 10:20:56.322"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>//input[@id="btnGetAccount"]</arg>
</arguments>
<msg timestamp="20180715 10:20:56.840" level="INFO">Clicking element '//input[@id="btnGetAccount"]'.</msg>
<status status="PASS" endtime="20180715 10:20:57.361" starttime="20180715 10:20:56.839"></status>
</kw>
<tags>
<tag>walk</tag>
</tags>
<status status="PASS" endtime="20180715 10:20:57.361" critical="yes" starttime="20180715 10:20:53.649"></status>
</test>
<test id="s1-t10" name="ZAP Contextualize">
<kw name="Zap Define Context" library="RoboZap">
<doc>Add Target to a context and use the context to perform all scanning/spidering operations</doc>
<arguments>
<arg>${CONTEXT}</arg>
<arg>http://${TARGET_URI}</arg>
</arguments>
<assign>
<var>${contextid}</var>
</assign>
<msg timestamp="20180715 10:21:03.458" level="INFO">${contextid} = 2</msg>
<status status="PASS" endtime="20180715 10:21:03.458" starttime="20180715 10:20:57.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${CONTEXT_ID}</arg>
<arg>${contextid}</arg>
</arguments>
<msg timestamp="20180715 10:21:03.460" level="INFO">${CONTEXT_ID} = 2</msg>
<status status="PASS" endtime="20180715 10:21:03.460" starttime="20180715 10:21:03.459"></status>
</kw>
<tags>
<tag>zap_context</tag>
</tags>
<status status="PASS" endtime="20180715 10:21:03.461" critical="yes" starttime="20180715 10:20:57.362"></status>
</test>
<test id="s1-t11" name="ZAP Active Scan">
<kw name="Zap Start Ascan" library="RoboZap">
<doc>Initiates ZAP Active Scan on the target url and context</doc>
<arguments>
<arg>${CONTEXT_ID}</arg>
<arg>http://${TARGET_URI}</arg>
<arg>${SCANPOLICY}</arg>
</arguments>
<assign>
<var>${scan_id}</var>
</assign>
<msg timestamp="20180715 10:21:05.524" level="INFO">${scan_id} = 0</msg>
<status status="PASS" endtime="20180715 10:21:05.524" starttime="20180715 10:21:03.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${SCAN_ID}</arg>
<arg>${scan_id}</arg>
</arguments>
<msg timestamp="20180715 10:21:05.525" level="INFO">${SCAN_ID} = 0</msg>
<status status="PASS" endtime="20180715 10:21:05.525" starttime="20180715 10:21:05.524"></status>
</kw>
<kw name="Zap Scan Status" library="RoboZap">
<doc>Fetches the status for the spider id provided by the user</doc>
<arguments>
<arg>${scan_id}</arg>
</arguments>
<msg timestamp="20180715 10:21:05.535" level="INFO">Scan running at 0%</msg>
<msg timestamp="20180715 10:21:15.548" level="INFO">Scan running at 1%</msg>
<msg timestamp="20180715 10:21:25.573" level="INFO">Scan running at 24%</msg>
<msg timestamp="20180715 10:21:35.588" level="INFO">Scan running at 43%</msg>
<msg timestamp="20180715 10:21:45.598" level="INFO">Scan running at 52%</msg>
<msg timestamp="20180715 10:21:55.613" level="INFO">Scan running at 52%</msg>
<msg timestamp="20180715 10:22:05.627" level="INFO">Scan running at 52%</msg>
<msg timestamp="20180715 10:22:15.637" level="INFO">Scan running at 52%</msg>
<msg timestamp="20180715 10:22:25.650" level="INFO">Scan running at 52%</msg>
<status status="PASS" endtime="20180715 10:22:35.661" starttime="20180715 10:21:05.526"></status>
</kw>
<tags>
<tag>zap_scan</tag>
</tags>
<status status="PASS" endtime="20180715 10:22:35.661" critical="yes" starttime="20180715 10:21:03.462"></status>
</test>
<test id="s1-t12" name="ZAP Generate Report">
<kw name="Zap Export Report" library="RoboZap">
<doc>This functionality works on ZAP 2.7.0 only. It leverages the Export Report Library to generate a report.</doc>
<arguments>
<arg>${RESULTS_PATH}/${ZAP_REPORT_FILE}</arg>
<arg>${REPORT_FORMAT}</arg>
<arg>${REPORT_TITLE}</arg>
<arg>${REPORT_AUTHOR}</arg>
</arguments>
<status status="PASS" endtime="20180715 10:22:36.098" starttime="20180715 10:22:35.663"></status>
</kw>
<tags>
<tag>zap_generate_report</tag>
</tags>
<status status="PASS" endtime="20180715 10:22:36.098" critical="yes" starttime="20180715 10:22:35.662"></status>
</test>
<test id="s1-t13" name="Write ZAP Results to DB">
<kw name="Parse Zap Json" library="ThreatPlaybook">
<doc>will parse a ZAP JSON file and load  into the DB as vulnerabilities. The Vulnerabilities link with the Threat Models by CWE</doc>
<arguments>
<arg>${RESULTS_PATH}/${ZAP_REPORT_FILE}</arg>
<arg>${TARGET_NAME}</arg>
<arg>${TARGET_URI}</arg>
</arguments>
<status status="PASS" endtime="20180715 10:22:36.183" starttime="20180715 10:22:36.100"></status>
</kw>
<status status="PASS" endtime="20180715 10:22:36.183" critical="yes" starttime="20180715 10:22:36.099"></status>
</test>
<test id="s1-t14" name="ZAP Die">
<kw name="Zap Shutdown" library="RoboZap">
<doc>Shutdown process for ZAP Scanner</doc>
<status status="PASS" endtime="20180715 10:22:36.191" starttime="20180715 10:22:36.185"></status>
</kw>
<status status="PASS" endtime="20180715 10:22:36.191" critical="yes" starttime="20180715 10:22:36.184"></status>
</test>
<test id="s1-t15" name="Close App">
<kw name="Close Browser" library="SeleniumLibrary">
<doc>Closes the current browser.</doc>
<status status="PASS" endtime="20180715 10:22:36.275" starttime="20180715 10:22:36.193"></status>
</kw>
<status status="PASS" endtime="20180715 10:22:36.276" critical="yes" starttime="20180715 10:22:36.192"></status>
</test>
<test id="s1-t16" name="Write Final Report">
<kw name="Convert To Boolean" library="BuiltIn">
<doc>Converts the given item to Boolean true or false.</doc>
<arguments>
<arg>False</arg>
</arguments>
<assign>
<var>${all_false}</var>
</assign>
<msg timestamp="20180715 10:22:36.279" level="INFO">${all_false} = False</msg>
<status status="PASS" endtime="20180715 10:22:36.279" starttime="20180715 10:22:36.278"></status>
</kw>
<kw name="Write Markdown Report" library="ThreatPlaybook">
<doc>Writes a Markdown Report in the results directory of CWD by default</doc>
<arguments>
<arg>gen_diagram=${all_false}</arg>
<arg>gen_threat_model=${all_false}</arg>
</arguments>
<msg timestamp="20180715 10:22:36.324" level="INFO">in file write loop</msg>
<status status="PASS" endtime="20180715 10:22:36.325" starttime="20180715 10:22:36.279"></status>
</kw>
<status status="PASS" endtime="20180715 10:22:36.325" critical="yes" starttime="20180715 10:22:36.277"></status>
</test>
<status status="FAIL" endtime="20180715 10:22:36.327" starttime="20180715 10:18:24.457"></status>
</suite>
<statistics>
<total>
<stat fail="1" pass="15">Critical Tests</stat>
<stat fail="1" pass="15">All Tests</stat>
</total>
<tag>
<stat fail="0" pass="3">walk</stat>
<stat fail="0" pass="1">zap_context</stat>
<stat fail="0" pass="1">zap_generate_report</stat>
<stat fail="0" pass="1">zap_scan</stat>
</tag>
<suite>
<stat fail="1" id="s1" name="PentestPipeline" pass="15">PentestPipeline</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20180715 10:20:07.967" level="WARN">SSLv3 Cipher Suites accepted</msg>
<msg timestamp="20180715 10:20:08.789" level="WARN">TLSv1 Cipher Suites accepted</msg>
<msg timestamp="20180715 10:20:09.402" level="WARN">TLSv1 Cipher Suites accepted</msg>
<msg timestamp="20180715 10:20:24.659" level="WARN">	No HSTS Header found</msg>
<msg timestamp="20180715 10:20:24.659" level="WARN">	No Expect-CT Header found.</msg>
</errors>
</robot>
